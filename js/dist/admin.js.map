{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://module.exports/webpack/bootstrap","webpack://module.exports/webpack/runtime/compat get default export","webpack://module.exports/webpack/runtime/define property getters","webpack://module.exports/webpack/runtime/hasOwnProperty shorthand","webpack://module.exports/external root \"flarum.core.compat['app']\"","webpack://module.exports/./src/config.js","webpack://module.exports/./src/shared/dom.js","webpack://module.exports/./src/shared/util.js","webpack://module.exports/./src/shared/intercept.js","webpack://module.exports/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","export const ID = 'alexanderomara-gravatar';\n","function matchesPolly(selector) {\n\treturn Array.prototype.indexOf.call(\n\t\t(this.ownerDocument || this.document).querySelectorAll(selector),\n\t\tthis\n\t) > -1;\n}\n\nexport function matches(element, selector) {\n\treturn (\n\t\telement.matches ||\n\t\telement.matchesSelector ||\n\t\telement.webkitMatchesSelector ||\n\t\telement.mozMatchesSelector ||\n\t\telement.msMatchesSelector ||\n\t\telement.oMatchesSelector ||\n\t\tmatchesPolly\n\t)\n\t\t.call(element, selector);\n}\n\nexport function copyElement(element) {\n\tconst div = document.createElement('div');\n\tdiv.innerHTML = element.outerHTML;\n\treturn div.firstChild;\n}\n","import app from 'flarum/app';\n\nimport {ID} from '../config';\n\nexport function data() {\n\treturn app.data[ID];\n}\n","import {matches, copyElement} from './dom';\nimport {data} from './util';\n\nconst gravatarAvatarRegex = /^[^/]*\\/\\/[^/]*gravatar\\.com\\/avatar\\//;\nconst gravatarLink = 'https://gravatar.com/';\nconst gravatarText = 'Gravatar';\nconst uploadIcon = 'fa-external-link-alt';\n\nfunction updateAvatarEditors() {\n\tconst {disableLocal} = data();\n\tconst editors = document.querySelectorAll('.AvatarEditor');\n\tfor (let i = editors.length; i--;) {\n\t\tconst editor = editors[i];\n\t\tconst avatar = editor.querySelector('.Avatar');\n\t\tconst upload = editor.querySelector('.item-upload');\n\t\tconst remove = editor.querySelector('.item-remove');\n\t\tconst gravatarAvatar = avatar && gravatarAvatarRegex.test(avatar.src);\n\n\t\t// Add Gravatar menu item if not already added.\n\t\tif (upload && !editor.querySelector('.item-gravatar')) {\n\t\t\tconst item = copyElement(upload);\n\t\t\titem.className = item.className.replace(\n\t\t\t\t'item-upload',\n\t\t\t\t'item-gravatar'\n\t\t\t);\n\t\t\tconst button = item.querySelector('button');\n\t\t\tif (button) {\n\t\t\t\tbutton.setAttribute('title', gravatarText);\n\t\t\t\tconst label = button.querySelector('.Button-label');\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.textContent = gravatarText;\n\t\t\t\t}\n\t\t\t\tconst icon = button.querySelector('.Button-icon');\n\t\t\t\ticon.className = icon.className.replace(\n\t\t\t\t\t/(^|\\s)fa-\\S+(\\s|$)/,\n\t\t\t\t\t`$1${uploadIcon}$2`\n\t\t\t\t);\n\t\t\t\tif (icon.className.indexOf(uploadIcon) < 0) {\n\t\t\t\t\ticon.className += ` ${uploadIcon}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tupload.parentElement.appendChild(item);\n\t\t}\n\n\t\t// Only show remove for local avatars.\n\t\tif (remove) {\n\t\t\tremove.style.display = gravatarAvatar ? 'none' : '';\n\t\t}\n\n\t\t// Only show upload if local avatars not disabled.\n\t\tif (upload) {\n\t\t\tupload.style.display = disableLocal ? 'none' : '';\n\t\t}\n\t}\n}\n\nfunction clickHandler(e) {\n\tconst {target} = e;\n\n\t// If click on Gravatar menu item, open link.\n\tif (matches(target, '.AvatarEditor .item-gravatar *')) {\n\t\tif (data().linkNewTab) {\n\t\t\twindow.open(gravatarLink, '_blank');\n\t\t}\n\t\telse {\n\t\t\tlocation.href = gravatarLink;\n\t\t}\n\t}\n\n\t// If click to open menu, update the editors.\n\telse if (\n\t\tmatches(target, '.AvatarEditor .Dropdown-toggle') ||\n\t\tmatches(target, '.AvatarEditor .Dropdown-toggle *')\n\t) {\n\t\tupdateAvatarEditors();\n\t}\n}\n\nexport function intercept() {\n\twindow.addEventListener('click', clickHandler, true);\n}\n","import app from 'flarum/app';\n\nimport {ID} from '../config';\nimport {intercept} from '../shared/intercept';\n\nconst join = (v, j) => v.reduce((a, e) => a ? [...a, j, e] : e, null)\n\nconst head = (name, examples = null) => (<span>{[\n\tname,\n\t...(examples ?\n\t\t[' (', ...join(examples.map(e => (<code>{e}</code>)), ', '), ')'] :\n\t\t[]\n\t)\n]}</span>);\n\napp.initializers.add(ID, app => {\n\tintercept();\n\n\tconst ext = app.extensionData.for(ID);\n\tconst code = (key, name, examples = null) => {\n\t\text.registerSetting(function() {\n\t\t\treturn (\n\t\t\t\t<div className=\"Form-group\">\n\t\t\t\t\t<label>{head(name, examples)}</label>\n\t\t\t\t\t<code>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='FormControl'\n\t\t\t\t\t\t\tbidi={this.setting(`${ID}.${key}`)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</code>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\tconst bool = (key, name, examples = null) => {\n\t\text.registerSetting({\n\t\t\tsetting: `${ID}.${key}`,\n\t\t\tlabel: head(name, examples),\n\t\t\ttype: 'boolean'\n\t\t});\n\t};\n\n\tcode('default', 'Default', ['mp', 'identicon', 'retro', '[URL]', '...']);\n\tbool('default_force', 'Force Default Gravatar Icons');\n\tcode('rating', 'Rating', ['g', 'pg', 'r', 'x']);\n\tbool('disable_local', 'Disable Local Avatars');\n\tbool('link_new_tab', 'Gravatar Link New Tab');\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","ID","matchesPolly","selector","Array","indexOf","this","ownerDocument","document","querySelectorAll","matches","element","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","data","app","gravatarAvatarRegex","gravatarLink","gravatarText","uploadIcon","clickHandler","e","target","linkNewTab","window","open","location","href","div","disableLocal","editors","i","length","editor","avatar","querySelector","upload","remove","gravatarAvatar","test","src","item","createElement","innerHTML","outerHTML","firstChild","className","replace","button","setAttribute","label","textContent","icon","parentElement","appendChild","style","display","updateAvatarEditors","head","name","examples","m","concat","v","map","reduce","add","addEventListener","ext","extensionData","code","registerSetting","type","bidi","setting","bool"],"sourceRoot":""}